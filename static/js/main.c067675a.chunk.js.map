{"version":3,"sources":["Heading.js","RestApiCalls.js","ConstructLatestQuote.js","LoadLatestQuote.js","LoadCompanyProfile.js","SectorPerformance.js","StockBarChart.js","StockLineChart.js","StockCandleStickChart.js","LoadStockTable.js","StockChartBar.js","CompanyNews.js","SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["Heading","className","getCompanyProfile","symbol","fetch","then","res","json","logo","getFullHistoricalData","getFiveDaysPrice","getNews","constructLatestQuote","data","meta_data_lastinterval","latest_quote","open","high","low","close","volume","LoadLatestQuote","logo_img","useState","isFlipped","setIsFlipped","handleClick","flipDirection","onClick","src","alt","Table","bsPrefix","size","LoadCompanyProfile","beta","ceo","changes","changesPercentage","companyName","description","exchange","image","industry","lastDiv","mktCap","price","range","sector","volAvg","website","percent","replace","Container","fluid","Row","Col","xs","sm","style","color","parseFloat","href","rel","target","SectorPerformance","basicMaterials","CommunicationServices","Conglomerates","ConsumerCyclical","ConsumerDefensive","Energy","Financial","FinancialServices","Healthcare","IndustrialGoods","Industrials","RealEstate","Services","Technology","Utilities","chart_data","labels","datasets","label","backgroundColor","context","index","dataIndex","dataset","borderColor","borderWidth","checkSign","value","num","aria-label","options","legend","display","scales","yAxes","ticks","fontColor","xAxes","StockBarChart","stockChartXValues","stockChartYValues","this","props","sp","forEach","item","push","date","state","position","Component","StockLineChart","fill","lineTension","StockCandleStickChart","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","series","sd","LoadStockTable","setState","tabIndex","stockprice","map","key","StockChartBar","onSelectChange","e","stockdata","length","oneMonthPrice","stock","i","stockdataArr","changeforFiveDays","fiveDayPrice","setBtnColorOriginal","document","getElementById","changeforOneMonth","changeforSixMonths","Date","startdate","setMonth","getMonth","sixMonthData","filter","obj","changeforYTD","sdate","getFullYear","ytddata","changeforOneYear","setFullYear","oneyeardata","chageforTwoYear","twoyeardata","changeforFiveYears","onDatesChange","startDate","endDate","filteredData","temp","focusedInput","oneDayChart","bind","md","Button","variant","id","defaultValue","onChange","startDateId","endDateId","isOutsideRange","day","moment","diff","onFocusChange","CompanyNews","news","datetime","source","headline","summary","getDate","SearchBar","property","onCompanyNameChange","suggestions","getStock_MainFunction","suggest","regex","RegExp","companyNamesFromJSON","sort","v","test","company_symbol_json","latestQuote","quote","companyprofile","sector_data","stockPrice","errorMsg","calculateSuggestions","suggestionsSelected","getCompanyNamesForSuggestion","role","name","toLowerCase","includes","undefined","getSymbolFromCompanyName","Promise","all","values","quote_data","quote_temp","oneMonthdata","catch","console","log","data_temp","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c067675a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Heading.css';\r\n\r\nfunction Heading() {\r\n    return (<div className=\"Title\">\r\n        <header>\r\n            StockDash\r\n        </header>\r\n    </div>)\r\n}\r\nexport default Heading;\r\n","\r\n\r\n\r\n//Load the Latest Quote of the organization data\r\nexport const loadLatestQuote = symbol => {\r\n  return fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" + symbol + \"&interval=5min&outputsize=full&apikey=G65K9Q9YE1T9BXFR\").then(res => res.json());\r\n};\r\n\r\n//Load the company profile data\r\nexport const getCompanyProfile = symbol => {\r\n  return fetch(\"https://financialmodelingprep.com/api/v3/company/profile/\" + symbol + \"?apikey=51cd5399d466b899083a11705b4433d6\").then(res => res.json());\r\n};\r\n\r\n//Load the Company Logo\r\nexport const logo = symbol => {\r\n  return fetch(\"https://cloud.iexapis.com/v1/stock/\" + symbol + \"/logo?token=pk_7f40fdc95e4c46268d90695ab47e7b22\").then(res => res.json());\r\n};\r\n\r\n//Load the Sector Performance data\r\nexport const sector_perf = () => {\r\n  return fetch(\"https://financialmodelingprep.com/api/v3/stock/sectors-performance?apikey=ebc02941656b35fd9c0f448d231397bc\").then(res => res.json());\r\n};\r\n\r\n//Load the symbols and company data\r\nexport const symbols_company = () => {\r\n  return fetch(\"https://api.iextrading.com/1.0/ref-data/symbols\").then(res => res.json());\r\n};\r\n\r\n//Load full historial data (last 5 years data) of stock price\r\nexport const getFullHistoricalData = symbol => {\r\n  return fetch(\"https://financialmodelingprep.com/api/v3/historical-price-full/\" + symbol + \"?apikey=c8964ac00fabbac487c8a070afa49ff9\").then(res => res.json());\r\n};\r\n\r\n//Load last 5 days data of stock price\r\nexport const getFiveDaysPrice = symbol => {\r\n return fetch(\"https://cloud.iexapis.com/stable/stock/\" + symbol + \"/chart/5d?token=pk_1cd7010654304d9da845c98f9e030ab8\").then(res => res.json());\r\n}\r\n\r\n//Load latest news of company\r\nexport const getNews = symbol => {\r\n return fetch(\"https://cloud.iexapis.com/stable/stock/\" + symbol + \"/news/last/5?token=pk_11795e9e241a4c278aee46443660ba6d\").then(res => res.json());\r\n}\r\n","\r\n//constructLatestQuote is used to parse the latest quote data and return only open, high, low, close and volume\r\nfunction constructLatestQuote(data) {\r\n    let quote_data = data[\"Meta Data\"];\r\n    let meta_data_lastinterval = quote_data[\"3. Last Refreshed\"];\r\n    let latest_quote = data[\"Time Series (5min)\"][meta_data_lastinterval];\r\n    let open = latest_quote[\"1. open\"];\r\n    let high = latest_quote[\"2. high\"];\r\n    let low = latest_quote[\"3. low\"];\r\n    let close = latest_quote[\"4. close\"];\r\n    let volume = latest_quote[\"5. volume\"];\r\n    let quote = { open, high, low, close, volume };\r\n    return quote;\r\n}\r\n\r\nexport default constructLatestQuote;","import React, { useState } from 'react';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport './LoadLatestQuote.css'\r\nimport { Table } from 'react-bootstrap'\r\n\r\n//Loading the latest quote of the origanization\r\nconst LoadLatestQuote = ({\r\n    open,\r\n    high,\r\n    low,\r\n    close,\r\n    volume,\r\n    logo_img\r\n}) => {\r\n    //Used to set the state of the React Card\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n    return (\r\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"vertical\">\r\n            <div className=\"front\" onClick={handleClick}>\r\n                <div className=\"flex-item\"> <p>Latest Quote of the Organization</p></div>\r\n                <div className=\"flex-item\"><img src={logo_img['url']} alt=\"company logo\"></img></div>\r\n                <div className=\"flex-item\"><button className=\"button-front\" onClick={handleClick}>Show</button></div>\r\n            </div>\r\n            <div className=\"back\" onClick={handleClick}>\r\n                <Table bsPrefix=\"table-css\" size=\"sm\">\r\n                    <tbody>\r\n                        <tr className=\"row11\">\r\n                            <td className=\"cell\">Open</td>\r\n                            <td className=\"cell open\">$ {open}</td>\r\n                        </tr>\r\n                        <tr className=\"row22\">\r\n                            <td className=\"cell\">High</td>\r\n                            <td className=\"cell high\">$ {high}</td>\r\n                        </tr>\r\n                        <tr className=\"row11\">\r\n                            <td className=\"cell\">Low</td>\r\n                            <td className=\"cell low\">$ {low}</td>\r\n                        </tr>\r\n                        <tr className=\"row22\">\r\n                            <td className=\"cell\">Close</td>\r\n                            <td className=\"cell closing\">$ {close}</td>\r\n                        </tr>\r\n                        <tr className=\"row11\">\r\n                            <td className=\"cell\">Volume</td>\r\n                            <td className=\"cell\">{volume}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <div className=\"flex-item-back\">\r\n                    <button className=\"button-back\" onClick={handleClick}>Back</button>\r\n                </div>\r\n            </div>\r\n        </ReactCardFlip>\r\n    )\r\n}\r\n\r\nexport default LoadLatestQuote","import React, { useState } from 'react';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport './LoadCompanyProfile.css'\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\n\r\n//Loading the company profile\r\nconst LoadCompanyProfile = ({\r\n    beta,\r\n    ceo,\r\n    changes,\r\n    changesPercentage,\r\n    companyName,\r\n    description,\r\n    exchange,\r\n    image,\r\n    industry,\r\n    lastDiv,\r\n    mktCap,\r\n    price,\r\n    range,\r\n    sector,\r\n    volAvg,\r\n    website\r\n}) => {\r\n    //Convert changesPercent given as (-0.11%) to -0.11\r\n    let percent = changesPercentage.replace(/[()]/g, '');\r\n    percent = percent.replace('%', '');\r\n\r\n    //State to flip the React Card\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    return (\r\n        <ReactCardFlip isFlipped={isFlipped} flipDirection=\"vertical\">\r\n            <div className=\"front-profile\" onClick={handleClick}>\r\n                <div className=\"flex-item-profile\">{companyName} Profile</div>\r\n                <button className=\"button-front-profile\" onClick={handleClick}>Show</button>\r\n            </div>\r\n            <div className=\"back-profile\" onClick={handleClick}>\r\n                <Container fluid>\r\n                    <Row className=\"profile-pic\">\r\n                        <Col><img src={image} alt=\"company logo\"></img></Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Company Name: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{companyName}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Industry: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{industry}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Sector: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{sector}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>CEO: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{ceo}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Description: </Col>\r\n                        <Col className=\"profile-content description\" xs={12} sm={9}>{description}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Price: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}> $ {price}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Range: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}> $ {range}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Exchange: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{exchange}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Changes: </Col>\r\n                        <Col className=\"profile-content changepercent\" style={{ color: changes < 0 ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={9}>{changes}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Changes Percentage: </Col>\r\n                        <Col className=\"profile-content\" style={{ color: (parseFloat(percent) < 0) ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={9}>{changesPercentage}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Beta: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{beta}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Market Capitalization: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{mktCap}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Latest Dividend: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{lastDiv}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Average Volume: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}>{volAvg}</Col>\r\n                    </Row>\r\n                    <Row className=\"row-profile\">\r\n                        <Col className=\"profile-heading\" xs={12} sm={3}>Website: </Col>\r\n                        <Col className=\"profile-content\" xs={12} sm={9}><a href={website} rel=\"noopener noreferrer\" target=\"_blank\">{website}</a></Col>\r\n                    </Row>\r\n                </Container>\r\n                <button className=\"button-back-profile\" onClick={handleClick}>Back</button>\r\n            </div>\r\n        </ReactCardFlip>\r\n    )\r\n}\r\n\r\nexport default LoadCompanyProfile;","import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport \"./SectorPerformance.css\"\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n//Sector Performance component to show the Daily Performance of different Sectors\r\nconst SectorPerformance = ({\r\n    basicMaterials,\r\n    CommunicationServices,\r\n    Conglomerates,\r\n    ConsumerCyclical,\r\n    ConsumerDefensive,\r\n    Energy,\r\n    Financial,\r\n    FinancialServices,\r\n    Healthcare,\r\n    IndustrialGoods,\r\n    Industrials,\r\n    RealEstate,\r\n    Services,\r\n    Technology,\r\n    Utilities\r\n}) => {\r\n    const chart_data = {\r\n        labels: ['Basic Materials', 'Communication Services', 'Conglomerates',\r\n            'Consumer Cyclical', 'Consumer Defensive', 'Energy', 'Financial', 'Financial Services', 'Healthcare',\r\n            'Industrial Goods', 'Industrials', 'Real Estate', 'Services', 'Technology', 'Utilities'],\r\n        datasets: [\r\n            {\r\n                label: 'Sectors',\r\n                backgroundColor: function (context) {\r\n                    var index = context.dataIndex;\r\n                    var value = context.dataset.data[index];\r\n                    return value < 0 ? '#8F0000' :\r\n                        '#004D00';\r\n                },\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 1,\r\n                data: [parseFloat(basicMaterials),\r\n                parseFloat(CommunicationServices),\r\n                parseFloat(Conglomerates),\r\n                parseFloat(ConsumerCyclical),\r\n                parseFloat(ConsumerDefensive),\r\n                parseFloat(Energy),\r\n                parseFloat(Financial),\r\n                parseFloat(FinancialServices),\r\n                parseFloat(Healthcare),\r\n                parseFloat(IndustrialGoods),\r\n                parseFloat(Industrials),\r\n                parseFloat(RealEstate),\r\n                parseFloat(Services),\r\n                parseFloat(Technology),\r\n                parseFloat(Utilities)]\r\n            }\r\n        ]\r\n    }\r\n\r\n    function checkSign(value) {\r\n        var num = value.replace('%', '');\r\n        num = parseFloat(num);\r\n        if (num < 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    return (\r\n        <Container className=\"sector_container\">\r\n            <Row className=\"sector_row_heading\">\r\n                <Col xs={12}> Daily Performance of Sectors:</Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} className=\"chart\">\r\n                    <Bar aria-label=\"bar chart for sector performance\"\r\n                        data={chart_data}\r\n                        options={{\r\n                            legend: {\r\n                                display: false,\r\n                            },\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        fontColor: \"black\",\r\n                                    }\r\n                                }],\r\n                                xAxes: [{\r\n                                    ticks: {\r\n                                        fontColor: \"black\",\r\n                                    }\r\n                                }]\r\n                            }\r\n\r\n                        }\r\n                        }\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Basic Materials: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(basicMaterials) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{basicMaterials}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Communication Services: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(CommunicationServices) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{CommunicationServices}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Conglomerates: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Conglomerates) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Conglomerates}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Consumer Cyclical: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(ConsumerCyclical) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{ConsumerCyclical}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>ConsumerDefensive: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(ConsumerDefensive) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{ConsumerDefensive}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Energy: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Energy) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Energy}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Financial: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Financial) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Financial}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>FinancialServices: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(FinancialServices) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{FinancialServices}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Healthcare: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Healthcare) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Healthcare}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\" >\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>IndustrialGoods: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(IndustrialGoods) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{IndustrialGoods}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Industrials: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Industrials) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Industrials}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\" >\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>RealEstate: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(RealEstate) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{RealEstate}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Services: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Services) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Services}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Technology: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Technology) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Technology}</Col>\r\n            </Row>\r\n            <Row className=\"sector_row\">\r\n                <Col className=\"sector_heading\" xs={12} sm={6}>Utilities: </Col>\r\n                <Col className=\"sector_content\" style={{ color: checkSign(Utilities) === true ? \"#8F0000\" : \"#004D00\" }} xs={12} sm={6}>{Utilities}</Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SectorPerformance;","import React,{Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport \"./StockBarChart.css\" \r\n\r\n// defaults.global.maintainAspectRatio = false\r\nclass StockBarChart extends Component \r\n{\r\n  render() \r\n  {\r\n    var stockChartXValues=[];\r\n    var stockChartYValues=[];\r\n\r\n    this.props.sp.forEach(insertValues);\r\n    //Stored data for x-axis and y-axis in seperate arrays\r\n    function insertValues(item)\r\n    {\r\n      stockChartXValues.push(item.date);\r\n      stockChartYValues.push(item.close);\r\n    }    \r\n    //created dataset for bar chart   \r\n    const state = {\r\n        labels: stockChartXValues,\r\n        datasets: [\r\n          {\r\n            label: 'Closing Price',\r\n            backgroundColor:'rgba(54, 128, 45, 0.76)',\r\n            borderColor: 'rgba(0,0,0,0.7)',\r\n            borderWidth: 2,\r\n            data: stockChartYValues\r\n          }\r\n        ]\r\n      }\r\n      //passed data to bar chart and return bar chart\r\n      return (\r\n                  <div className=\"chart_container\">\r\n                    <Bar\r\n                    className=\"barChart\"\r\n                    data={state}\r\n                    options={{\r\n                        legend:{\r\n                        display:true,\r\n                        position:'bottom'\r\n                        } \r\n                    }}\r\n                    />\r\n                     </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default StockBarChart;","import React,{Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport \"./StockBarChart.css\" \r\n\r\nclass StockLineChart extends Component \r\n{\r\n  render() \r\n  {\r\n    var stockChartXValues=[];\r\n    var stockChartYValues=[];\r\n    \r\n    this.props.sp.forEach(insertValues);\r\n    //Stored data for x-axis and y-axis in seperate arrays\r\n    function insertValues(item)\r\n    {\r\n      stockChartXValues.push(item.date);\r\n      stockChartYValues.push(item.close);\r\n    }    \r\n    //created dataset for line chart\r\n    const state = {\r\n        labels: stockChartXValues,\r\n        datasets: [\r\n          {\r\n            label: 'Closing Price',\r\n            fill: true,\r\n            lineTension: 0.5,\r\n            backgroundColor:'rgba(54, 128, 45, 0.76)',\r\n            borderColor: 'rgba(0,0,0,0.5)',\r\n            borderWidth: 2,\r\n            data: stockChartYValues\r\n          }\r\n        ]\r\n      }\r\n      //passed data to line chart and return line chart\r\n      return (\r\n        <div className=\"chart_container\">\r\n                    <Line\r\n                    className=\"barChart\"\r\n                    data={state}\r\n                    options={{\r\n                        legend:{\r\n                        display:true,\r\n                        position:'bottom'\r\n                        }\r\n                    }}\r\n                    />\r\n                    </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default StockLineChart;","import React,{Component} from 'react'; \r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport \"./StockBarChart.css\"\r\n\r\nclass StockCandleStickChart extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n      super(props);\r\n      this.state = {\r\n        options: {\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 350\r\n          },\r\n          title: {\r\n            text: 'CandleStick Stock Chart',\r\n            align: 'left'\r\n          },\r\n          xaxis: {\r\n            type: 'datetime'\r\n          },\r\n          yaxis: {\r\n            tooltip: {\r\n              enabled: true\r\n            }\r\n          }\r\n        },\r\n      };\r\n     \r\n    }\r\n    //passed data to candle stick chart and return candle stick chart\r\n    render() \r\n    {  \r\n      return (\r\n          <div className=\"chart_container\">\r\n                    <ReactApexChart options={this.state.options} series={this.props.sd} type=\"candlestick\" height={350} />\r\n          </div>\r\n      );\r\n    }\r\n  } \r\nexport default StockCandleStickChart;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from 'react-bootstrap'\r\nimport \"./LoadStockTable.css\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nclass LoadStockTable extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false\r\n        };\r\n      }\r\n    //set flip status  \r\n    handleClick = () => {\r\n        this.setState({isFlipped:!this.state.isFlipped});\r\n    };\r\n\r\n    render()\r\n    {\r\n            return (\r\n                <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\r\n                <div className=\"front-table\" onClick={this.handleClick}>\r\n                    <div className=\"flex-table-item\">Stock data table</div>\r\n                    <button className=\"button-table-front\" onClick={this.handleClick}>Show</button>\r\n                </div>\r\n                <div className=\"main-container\" onClick={this.handleClick}>\r\n                    <div tabIndex=\"0\" className=\"table-container\">\r\n                        <Table bsPrefix=\"table-css\" size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                        <th className=\"cell\">Date</th>\r\n                                        <th className=\"cell\">Open</th>\r\n                                        <th className=\"cell\">High</th>\r\n                                        <th className=\"cell\">Low</th>\r\n                                        <th className=\"cell\">Close</th>\r\n                                        <th className=\"cell\">Volume</th>\r\n                                    </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {\r\n                                        //used stockprice data which is passed in props from component which called load stock table component\r\n                                        this.props.stockprice.map(item=>(\r\n                                        <tr key={item.date}>\r\n                                            <td className=\"cell\">{item.date}</td>\r\n                                            <td className=\"cell\">{item.open}</td>\r\n                                            <td className=\"cell\">{item.high}</td>\r\n                                            <td className=\"cell\">{item.low}</td>\r\n                                            <td className=\"cell\">{item.close}</td>\r\n                                            <td className=\"cell\">{item.volume}</td>\r\n                                        </tr>))\r\n                                    }\r\n                                </tbody>\r\n                                </Table>\r\n                    </div>\r\n                    <button className=\"button-table-back\" onClick={this.handleClick}>Back</button>\r\n                </div>\r\n                </ReactCardFlip>);\r\n    }\r\n}\r\n \r\nexport default LoadStockTable","import React, { Component } from 'react';\r\nimport \"./StockChartBar.css\";\r\nimport moment from 'moment';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport StockBarChart from \"./StockBarChart\";\r\nimport StockLineChart from \"./StockLineChart\";\r\nimport StockCandleStickChart from \"./StockCandleStickChart\";\r\nimport { Button } from 'react-bootstrap';\r\nimport LoadStockTable from \"./LoadStockTable\";\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nclass StockChartBar extends Component\r\n{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: null,\r\n      endDate: null,\r\n      focusedInput: null,\r\n      value:'lineChart',\r\n      stockdata:[],\r\n      series: [{data:[]}] ,\r\n      oneDayChart:null\r\n    };\r\n    this.onSelectChange=this.onSelectChange.bind(this)\r\n  }\r\n  //On select option from dropdown setting current selected value to value in state and on selecting \r\n  //candleStickChart if data is not set in state for candlestick chart then setting it.\r\n  onSelectChange = (e) => {\r\n    this.setState({value: e.target.value });\r\n    if(e.target.value===\"candleStickChart\" && this.state.stockdata.length===0)\r\n    {\r\n      this.setState({stockdata:this.props.oneMonthPrice});\r\n      var stock=[];\r\n      for(let i=0;i<this.props.oneMonthPrice.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(this.props.oneMonthPrice[i].date,this.props.oneMonthPrice[i].open,this.props.oneMonthPrice[i].high,this.props.oneMonthPrice[i].low,this.props.oneMonthPrice[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n        this.setState({ series: [{\r\n            data: stock}]\r\n        })\r\n    }\r\n  }\r\n  \r\n  //Below function is setting fivedays data to stockdata in state to display 5 days data in chart and in table when click on 5 days button\r\n  //and also changing color of 5 days button to show it as active\r\n  changeforFiveDays = () => {\r\n    this.setState({stockdata:this.props.fiveDayPrice});\r\n    var stock=[];\r\n    for(let i=0;i<this.props.fiveDayPrice.length;i++)\r\n    {\r\n      var stockdataArr = [];\r\n      stockdataArr.push(this.props.fiveDayPrice[i].date,this.props.fiveDayPrice[i].open,this.props.fiveDayPrice[i].high,this.props.fiveDayPrice[i].low,this.props.fiveDayPrice[i].close);\r\n      stock.push(stockdataArr);\r\n    }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal();\r\n      var btn =  document.getElementById('fived');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is setting one month data to stockdata in state to display one month data in chart and in table when click on one month button\r\n  //and also changing color of one month button to show it as active\r\n  changeforOneMonth = () => {\r\n    this.setState({stockdata:this.props.oneMonthPrice});\r\n    var stock=[];\r\n    for(let i=0;i<this.props.oneMonthPrice.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(this.props.oneMonthPrice[i].date,this.props.oneMonthPrice[i].open,this.props.oneMonthPrice[i].high,this.props.oneMonthPrice[i].low,this.props.oneMonthPrice[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n     this.setBtnColorOriginal(); \r\n     var btn =  document.getElementById('onem');\r\n     btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is setting all buttons color to original \r\n  setBtnColorOriginal()\r\n  {\r\n    var fivedbtn =  document.getElementById('fived');\r\n    fivedbtn.style.backgroundColor = \"#b3e6ff\";\r\n    var onembtn = document.getElementById('onem');\r\n    onembtn.style.backgroundColor =  \"#b3e6ff\";\r\n    var sixmbtn = document.getElementById('sixm');\r\n    sixmbtn.style.backgroundColor = \"#b3e6ff\";\r\n    var ytdbtn = document.getElementById('ytd');\r\n    ytdbtn.style.backgroundColor = \"#b3e6ff\";\r\n    var oneybtn = document.getElementById('oney');\r\n    oneybtn.style.backgroundColor = \"#b3e6ff\";\r\n    var twoybtn = document.getElementById('twoy');\r\n    twoybtn.style.backgroundColor = \"#b3e6ff\";\r\n    var fiveybtn = document.getElementById('fivey');\r\n    fiveybtn.style.backgroundColor = \"#b3e6ff\";\r\n  }\r\n\r\n  //Below function is filtering past 6 month data from 5 years data and setting it to \r\n  //stockdata in state to display 6 month data in chart and in table when click on 6 month button\r\n  //and also changing color of 6 month button to show it as active\r\n  changeforSixMonths = () => {\r\n    var date = new Date();\r\n    var startdate = new Date(date.setMonth(date.getMonth()-6));\r\n    var sixMonthData=this.props.stockprice.filter(function(obj){\r\n      var temp = new Date(obj.date); \r\n      return temp>=startdate;\r\n    }); \r\n    this.setState({stockdata:sixMonthData});\r\n    var stock=[];\r\n    for(let i=0;i<sixMonthData.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(sixMonthData[i].date,sixMonthData[i].open,sixMonthData[i].high,sixMonthData[i].low,sixMonthData[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal(); \r\n      var btn =  document.getElementById('sixm');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is filtering current year data from 5 years data and setting it to \r\n  //stockdata in state to display current year data in chart and in table when click on ytd button\r\n  //and also changing color of ytd button to show it as active\r\n  changeforYTD = () => { \r\n    var sdate = new Date(new Date().getFullYear(), 0, 1);\r\n    var ytddata=this.props.stockprice.filter(function(obj){\r\n      var temp = new Date(obj.date); \r\n      return temp>=sdate;\r\n    }); \r\n    this.setState({stockdata:ytddata});\r\n    var stock=[];\r\n    for(let i=0;i<ytddata.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(ytddata[i].date,ytddata[i].open,ytddata[i].high,ytddata[i].low,ytddata[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal(); \r\n      var btn =  document.getElementById('ytd');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is filtering past 1 year data from 5 years data and setting it to \r\n  //stockdata in state to display past 1 year data in chart and in table when click on 1 year button\r\n  //and also changing color of 1 year button to show it as active\r\n  changeforOneYear = () =>{\r\n    var sdate = new Date();\r\n    sdate.setFullYear(sdate.getFullYear()-1);\r\n    var oneyeardata=this.props.stockprice.filter(function(obj){\r\n      var temp = new Date(obj.date); \r\n      return temp>=sdate;\r\n    }); \r\n    this.setState({stockdata:oneyeardata});\r\n    var stock=[];\r\n    for(let i=0;i<oneyeardata.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(oneyeardata[i].date,oneyeardata[i].open,oneyeardata[i].high,oneyeardata[i].low,oneyeardata[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal(); \r\n      var btn =  document.getElementById('oney');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is filtering past 2 year data from 5 years data and setting it to \r\n  //stockdata in state to display past 2 year data in chart and in table when click on 2 year button\r\n  //and also changing color of 2 year button to show it as active\r\n  chageforTwoYear = () =>{\r\n   var sdate = new Date();\r\n    sdate.setFullYear(sdate.getFullYear()-2);\r\n    var twoyeardata=this.props.stockprice.filter(function(obj){\r\n      var temp = new Date(obj.date); \r\n      return temp>=sdate;\r\n    }); \r\n    this.setState({stockdata:twoyeardata});\r\n    var stock=[];\r\n    for(let i=0;i<twoyeardata.length;i++)\r\n      {\r\n        var stockdataArr = [];\r\n        stockdataArr.push(twoyeardata[i].date,twoyeardata[i].open,twoyeardata[i].high,twoyeardata[i].low,twoyeardata[i].close);\r\n        stock.push(stockdataArr);\r\n      }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal(); \r\n      var btn =  document.getElementById('twoy');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n    //Below function is setting 5 years data to stockdata in state to display past 5 year data in chart and in \r\n    //table when click on 5 year button and also changing color of 5 year button to show it as active\r\n  changeforFiveYears = () => {\r\n    this.setState({stockdata:this.props.stockprice});\r\n    var stock=[];\r\n    for(let i=0;i<this.props.stockprice.length;i++)\r\n    {\r\n      var stockdataArr = [];\r\n      stockdataArr.push(this.props.stockprice[i].date,this.props.stockprice[i].open,this.props.stockprice[i].high,this.props.stockprice[i].low,this.props.stockprice[i].close);\r\n      stock.push(stockdataArr);\r\n    }\r\n      this.setState({ series: [{\r\n          data: stock}]\r\n      })\r\n      this.setBtnColorOriginal(); \r\n      var btn =  document.getElementById('fivey');\r\n      btn.style.backgroundColor = \"#D3D3D3\";\r\n  }\r\n\r\n  //Below function is filtering data for input date range from 5 years data and setting it to \r\n  //stockdata in state to display filtered data in chart and in table when selecting date range from calender\r\n  onDatesChange = ({ startDate, endDate }) => {\r\n    \r\n    this.setState({ startDate, endDate });\r\n   \r\n      if(startDate!=null && endDate!=null)\r\n      {\r\n          var filteredData=this.props.stockprice.filter(function(obj){\r\n          var temp = new Date(obj.date); \r\n          return temp>=startDate && temp<=endDate;\r\n          }); \r\n          this.setState({stockdata:filteredData});\r\n          var stock=[];\r\n          for(let i=0;i<filteredData.length;i++)\r\n          {\r\n            var stockdataArr = [];\r\n            stockdataArr.push(filteredData[i].date,filteredData[i].open,filteredData[i].high,filteredData[i].low,filteredData[i].close);\r\n            stock.push(stockdataArr);\r\n          }\r\n            this.setState({ series: [{\r\n                data: stock}]\r\n            })\r\n      }\r\n      this.setBtnColorOriginal();\r\n  }\r\n \r\n  render() {\r\n    return (\r\n     <div className=\"mainContainer\">\r\n      <div className=\"searchBar\">\r\n        <Container fluid>\r\n          <Row className=\"row\">\r\n            <Col  md={1}>\r\n                <Button aria-label=\"5d\" variant=\"5day\" className=\"button\" onClick={this.changeforFiveDays} id=\"fived\">5d</Button>\r\n            </Col>\r\n            <Col  md={1}>\r\n                <Button aria-label=\"1m\" variant=\"1month\" className=\"button\" onClick={this.changeforOneMonth} id=\"onem\">1m</Button>\r\n            </Col>\r\n            <Col  md={1}> \r\n                <Button  aria-label=\"6m\" variant=\"6months\" className=\"button\" onClick={this.changeforSixMonths} id=\"sixm\">6m</Button>\r\n            </Col>\r\n            <Col  md={1}>\r\n                <Button aria-label=\"ytd\" variant=\"ytd\" className=\"button\" onClick={this.changeforYTD} id=\"ytd\">ytd</Button>\r\n            </Col>\r\n            <Col  md={1}>\r\n                <Button aria-label=\"1y\" variant=\"1year\" className=\"button\" onClick={this.changeforOneYear} id=\"oney\">1y</Button>\r\n            </Col>\r\n            <Col  md={1}>\r\n                <Button aria-label=\"2y\" variant=\"2years\" className=\"button\" onClick={this.chageforTwoYear} id=\"twoy\">2y</Button>\r\n            </Col>\r\n            <Col  md={1}>\r\n                <Button aria-label=\"5y\" variant=\"5y\" className=\"button\" onClick={this.changeforFiveYears} id=\"fivey\">5y</Button>\r\n            </Col>\r\n            <Col   md={1}>\r\n              <select aria-label=\"charts\" defaultValue={'lineChart'} className=\"dropDown\" onChange={this.onSelectChange}>\r\n                <option value=\"lineChart\">Line</option>\r\n                <option  value=\"candleStickChart\">CandleStick</option>\r\n                <option  value=\"barChart\">Bar</option>\r\n              </select>\r\n            </Col>\r\n            <Col  md={4}>\r\n                <DateRangePicker \r\n                startDateId=\"startDate\"\r\n                endDateId=\"endDate\"\r\n                isOutsideRange={day => (moment().diff(day) < 0)} \r\n                startDate={this.state.startDate}\r\n                endDate={this.state.endDate}\r\n                onDatesChange={this.onDatesChange}\r\n                focusedInput={this.state.focusedInput}\r\n                onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\r\n              />\r\n            </Col>\r\n          \r\n          </Row>\r\n        </Container>\r\n      </div>\r\n     <div>\r\n     {(() => {\r\n        //If didn't get stock data for searched company from api then display none \r\n        if(this.props.stockprice===null || this.props.stockprice.length===0 )\r\n        {\r\n            return <div className=\"null_condition\"></div>;\r\n        }\r\n        //If barchart is selected from dropdown then call barchar component\r\n        else if(this.state.value==='barChart')\r\n        {\r\n          //load data for selected time\r\n          if(this.state.stockdata.length!==0)\r\n          {\r\n            return <div className=\"StockChartTable\">\r\n              <StockBarChart sp={this.state.stockdata}/>\r\n              <LoadStockTable stockprice={this.state.stockdata}/>\r\n              </div>;\r\n          }\r\n          else\r\n          {\r\n            //by default load 1 month data\r\n            return (this.props.oneMonthPrice===null)?<div className=\"null_condition\"></div>:\r\n            <div className=\"StockChartTable\">\r\n              <StockBarChart sp={this.props.oneMonthPrice}/>\r\n              <LoadStockTable stockprice={this.props.oneMonthPrice}/>\r\n            </div>\r\n            ;\r\n          }\r\n        }\r\n        //If lineChart is selected from dropdown then call lineChart component by default it will load line chart\r\n        else if(this.state.value==='lineChart')\r\n        {\r\n          //load data for selected time\r\n          if(this.state.stockdata.length!==0)\r\n            return <div className=\"StockChartTable\">\r\n              <StockLineChart sp={this.state.stockdata}/>\r\n              <LoadStockTable stockprice={this.state.stockdata}/>\r\n              </div>;\r\n          else\r\n          {\r\n            //by default load 1 month data\r\n            return (this.props.oneMonthPrice===null)?<div className=\"null_condition\"></div>:\r\n            <div className=\"StockChartTable\">\r\n              <StockLineChart sp={this.props.oneMonthPrice}/>\r\n              <LoadStockTable stockprice={this.props.oneMonthPrice}/>\r\n              </div>;\r\n          }\r\n        }\r\n        //If candleStickChart is selected from dropdown then call candleStickChart component\r\n        else if(this.state.value==='candleStickChart')\r\n        {\r\n          return <div className=\"StockChartTable\">\r\n            <StockCandleStickChart sd={this.state.series}/>\r\n            <LoadStockTable stockprice={this.state.stockdata}/>\r\n            </div>\r\n        }\r\n        else\r\n        {\r\n          return <div className=\"null_condition\"></div>\r\n        }\r\n      })()}\r\n   </div>\r\n   </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StockChartBar;","import React, { Component } from \"react\";\r\nimport \"./CompanyNews.css\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nclass CompanyNews extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false\r\n        };\r\n      }\r\n     //set flip status  \r\n    handleClick = () => {\r\n        this.setState({isFlipped:!this.state.isFlipped});\r\n    };\r\n\r\n    render() \r\n    { \r\n        return (\r\n            <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\r\n            <div className=\"front-news\" onClick={this.handleClick}>\r\n                <div className=\"flex-news-item\">News about  {this.props.companyName}</div>\r\n                <button className=\"button-news-front\" onClick={this.handleClick}>Show</button>\r\n            </div>\r\n            <div onClick={this.handleClick}>\r\n                <div className=\"newscontainer\">\r\n                    <div className=\"section\">\r\n                        <h1 className=\"newsHeader\">\r\n                        {\"News about \" + this.props.companyName}\r\n                        </h1>\r\n                        <div tabIndex=\"0\" className=\"scrollable-content newscontent\">\r\n                        {\r\n                            //used news data which is passed in props from component which called company news component\r\n                            //displaying headline,date,source and summary of news\r\n                                        this.props.news.map(item=>\r\n                                            (\r\n                                                ((item.datetime===null || item.source===null || item.headline===null)?\r\n                                                        <div className=\"null-check\"></div>:\r\n                                                    (item.summary===null?\r\n                                                        (<div key={item.date+item.headline} className=\"content\">\r\n                                                            <h2 className=\"headline\">{item.headline}</h2>\r\n                                                            <p className=\"summary\">{item.source}&nbsp;{\", \"+(new Date(item.datetime).getFullYear()+\"-\"+new Date(item.datetime).getMonth()+\"-\"+new Date(item.datetime).getDate())}\r\n                                                            <br/>\r\n                                                            {\"No summary available\"}</p>\r\n                                                            <hr/>\r\n                                                        </div>):\r\n                                                        (<div key={item.date+item.headline} className=\"content\">\r\n                                                            <h2 className=\"headline\">{item.headline}</h2>\r\n                                                            <p className=\"summary\">{item.source}&nbsp;{\", \"+(new Date(item.datetime).getFullYear()+\"-\"+new Date(item.datetime).getMonth()+\"-\"+new Date(item.datetime).getDate())}\r\n                                                            <br/>{item.summary}</p>\r\n                                                            <hr/>\r\n                                                        </div>)\r\n                                                )\r\n                                            )\r\n                                            ))\r\n                                    }\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"button-news-back\" onClick={this.handleClick}>Back</button>\r\n                </div>\r\n           </div>\r\n           </ReactCardFlip>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompanyNews;","import React, { Component } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport { loadLatestQuote, getCompanyProfile, logo, symbols_company, sector_perf, getFullHistoricalData, getFiveDaysPrice, getNews } from \"./RestApiCalls\";\r\nimport constructLatestQuote from \"./ConstructLatestQuote\";\r\nimport LoadLatestQuote from \"./LoadLatestQuote\";\r\nimport LoadCompanyProfile from \"./LoadCompanyProfile\";\r\nimport SectorPerformance from \"./SectorPerformance\";\r\nimport StockChartBar from \"./StockChartBar\";\r\nimport CompanyNews from \"./CompanyNews\";\r\n//Search Bar (AutoComplete Textbox) with all results.\r\nclass SearchBar extends Component {\r\n    constructor(property) {\r\n        super(property);\r\n        this.state = {\r\n            suggestions: [], text: '', companyNamesFromJSON: [], company_symbol_json: [], latestQuote: null,\r\n            companyName: \"\", logo_img: null, quote: null, companyprofile: null, sector_data: null, stockPrice: [],\r\n            fiveDayPrice: [], oneMonthPrice: [], news: [], errorMsg: null\r\n        };\r\n        this.symbol = { value: \"\" };\r\n        this.getStock_MainFunction = this.getStock_MainFunction.bind(this);\r\n        this.onCompanyNameChange = this.onCompanyNameChange.bind(this);\r\n        this.calculateSuggestions = this.calculateSuggestions.bind(this);\r\n        this.suggestionsSelected = this.suggestionsSelected.bind(this);\r\n        this.getCompanyNamesForSuggestion = this.getCompanyNamesForSuggestion.bind(this);\r\n    }\r\n\r\n    //On Detecting change in textbox value, populate the company name suggestions\r\n    //If text is empty, reset the states.\r\n    onCompanyNameChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value.length === 0) {\r\n            this.setState({ text: '' });\r\n            this.setState({ suggestions: [] });\r\n            this.setState({ companyName: '' }, this.getStock_MainFunction);\r\n        }\r\n        let suggest = [];\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggest = this.state.companyNamesFromJSON.sort().filter(v => regex.test(v));\r\n        }\r\n        this.setState({ suggestions: suggest, text: value });\r\n\r\n    }\r\n\r\n    //On selecting the company name from the drop down, call the main function: Get Stock\r\n    suggestionsSelected(value) {\r\n        this.setState({ text: value });\r\n        this.setState({ suggestions: [] });\r\n        this.setState({ companyName: value }, this.getStock_MainFunction);\r\n    }\r\n\r\n    //Renders company name suggestions in a list\r\n    calculateSuggestions() {\r\n        const { suggestions } = this.state;\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        var i = 1;\r\n        return (<section role=\"list\" className=\"list-wrapper\">\r\n            {suggestions.map((item) => <div role=\"listitem\" tabIndex={i++} className=\"list-item\" key={i++} onClick={() => this.suggestionsSelected(item)}><button type=\"submit\" className=\"submit_item\">{item}</button></div>)}\r\n        </section>)\r\n    }\r\n\r\n    //Given the company name, find the symbol to use in subsequent requests\r\n    getSymbolFromCompanyName(companyName) {\r\n        for (var i = 0; i < this.state.company_symbol_json.length; i++) {\r\n            if (\r\n                this.state.company_symbol_json[i].name\r\n                    .toLowerCase()\r\n                    .includes(companyName.toLowerCase())\r\n            ) {\r\n                this.symbol.value = this.state.company_symbol_json[i].symbol;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Main Function: Get response from all APIS: Latest Quote, Company Profile, Logo\r\n    getStock_MainFunction() {\r\n        if (this.state.companyName === undefined || this.state.companyName.length === 0) {\r\n            this.setState({ latestQuote: null });\r\n            this.setState({ logo_img: null });\r\n            this.setState({ quote: null });\r\n            this.setState({ companyprofile: null });\r\n            this.setState({ stockPrice: null });\r\n            this.setState({ fiveDayPrice: null });\r\n            this.setState({ oneMonthPrice: null });\r\n            this.setState({ news: null });\r\n            this.setState({ errorMsg: null });\r\n        } else {\r\n            this.getSymbolFromCompanyName(this.state.companyName);\r\n            Promise.all([\r\n                loadLatestQuote(this.symbol.value),\r\n                getCompanyProfile(this.symbol.value),\r\n                logo(this.symbol.value),\r\n                getFullHistoricalData(this.symbol.value),\r\n                getFiveDaysPrice(this.symbol.value),\r\n                getNews(this.symbol.value)\r\n            ]).then((values) => {\r\n                let quote_data = values[0];\r\n                this.setState({ latestQuote: constructLatestQuote(quote_data) });\r\n                this.setState({ logo_img: values[2] });\r\n                let quote_temp = { ...this.state.latestQuote, logo_img: this.state.logo_img };\r\n                this.setState({ quote: quote_temp });\r\n                this.setState({ companyprofile: values[1]['profile'] });\r\n                this.setState({ stockPrice: values[3]['historical'] });\r\n                this.setState({ fiveDayPrice: values[4] });\r\n                this.setState({ news: values[5] });\r\n                var date = new Date();\r\n                var startdate = new Date(date.setMonth(date.getMonth() - 1));\r\n                var oneMonthdata = values[3]['historical'].filter(function (obj) {\r\n                    var temp = new Date(obj.date);\r\n                    return temp >= startdate;\r\n                });\r\n                this.setState({ oneMonthPrice: oneMonthdata });\r\n                this.setState({ errorMsg: null });\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                this.setState({ latestQuote: null });\r\n                this.setState({ logo_img: null });\r\n                this.setState({ quote: null });\r\n                this.setState({ companyprofile: null });\r\n                this.setState({ stockPrice: null });\r\n                this.setState({ fiveDayPrice: null });\r\n                this.setState({ oneMonthPrice: null });\r\n                this.setState({ news: null });\r\n                this.setState({ errorMsg: \"OOPS! Something went wrong. Please try again.\" });\r\n            });\r\n        }\r\n    }\r\n\r\n    //Populate all the company Names to use for suggestions later\r\n    getCompanyNamesForSuggestion() {\r\n        var data = []\r\n        for (var i = 0; i < this.state.company_symbol_json.length; i++) {\r\n            if (this.state.company_symbol_json[i].name.length !== 0) {\r\n                data.push(this.state.company_symbol_json[i].name);\r\n            }\r\n        }\r\n        this.setState({ companyNamesFromJSON: data });\r\n    }\r\n\r\n    //Executed on load: Symbols and Company mapping data, Sector Performance\r\n    async componentDidMount() {\r\n        Promise.all([\r\n            symbols_company(),\r\n            sector_perf()\r\n        ]).then((values) => {\r\n            this.setState({ company_symbol_json: values[0] }, this.getCompanyNamesForSuggestion);\r\n            let data_temp = {}\r\n            data_temp = {\r\n                basicMaterials: values[1]['sectorPerformance'][0].changesPercentage,\r\n                CommunicationServices: values[1]['sectorPerformance'][1].changesPercentage,\r\n                Conglomerates: values[1]['sectorPerformance'][2].changesPercentage,\r\n                ConsumerCyclical: values[1]['sectorPerformance'][3].changesPercentage,\r\n                ConsumerDefensive: values[1]['sectorPerformance'][4].changesPercentage,\r\n                Energy: values[1]['sectorPerformance'][5].changesPercentage,\r\n                Financial: values[1]['sectorPerformance'][6].changesPercentage,\r\n                FinancialServices: values[1]['sectorPerformance'][7].changesPercentage,\r\n                Healthcare: values[1]['sectorPerformance'][8].changesPercentage,\r\n                IndustrialGoods: values[1]['sectorPerformance'][9].changesPercentage,\r\n                Industrials: values[1]['sectorPerformance'][10].changesPercentage,\r\n                RealEstate: values[1]['sectorPerformance'][11].changesPercentage,\r\n                Services: values[1]['sectorPerformance'][12].changesPercentage,\r\n                Technology: values[1]['sectorPerformance'][13].changesPercentage,\r\n                Utilities: values[1]['sectorPerformance'][14].changesPercentage\r\n            }\r\n            this.setState({ sector_data: data_temp });\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n            this.setState({ latestQuote: null });\r\n            this.setState({ logo_img: null });\r\n            this.setState({ quote: null });\r\n            this.setState({ companyprofile: null });\r\n            this.setState({ stockPrice: null });\r\n            this.setState({ fiveDayPrice: null });\r\n            this.setState({ oneMonthPrice: null });\r\n            this.setState({ news: null });\r\n            this.setState({ errorMsg: \"OOPS! Something went wrong. Please try again.\" }); \r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { text } = this.state;\r\n        return (\r\n            <div role=\"main\">\r\n                <div className=\"AutoComplete\" role=\"search\">\r\n                    <input value={text} placeholder=\"Enter name of organization\" onChange={this.onCompanyNameChange} type=\"text\" aria-label=\"Select company name\" />\r\n                    {this.calculateSuggestions()}\r\n                </div>\r\n                {this.state.errorMsg == null ?\r\n                    <div>\r\n                        <div className=\"block_latestquote\" role=\"contentinfo\">\r\n                            {this.state.quote == null ? (this.state.sector_data == null ? <div className=\"null_condition\" ></div> : <SectorPerformance{...this.state.sector_data} />) : <LoadLatestQuote{...this.state.quote} />}\r\n                        </div>\r\n                        <div className=\"block_latestquote\" role=\"contentinfo\">\r\n                            {this.state.companyprofile == null ? <div className=\"null_condition\"></div> : <LoadCompanyProfile{...this.state.companyprofile} />}\r\n                        </div>\r\n                        <div>\r\n                            {(this.state.news === null || this.state.news.length === 0) ? <div className=\"null_condition\"></div> : <CompanyNews news={this.state.news} companyName={this.state.companyName} />}\r\n                        </div>\r\n                        <div>\r\n                            {(this.state.stockPrice === undefined || this.state.stockPrice === null || this.state.stockPrice.length === 0) ? <div className=\"null_condition\"></div> :\r\n                                <StockChartBar stockprice={this.state.stockPrice} fiveDayPrice={this.state.fiveDayPrice} oneMonthPrice={this.state.oneMonthPrice} />}\r\n                        </div>\r\n                    </div>\r\n                    : <div className=\"error_msg\">{this.state.errorMsg}</div>}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\nimport './App.css';\nimport Heading from './Heading'\nimport SearchBar from './SearchBar'\n\nfunction App() {\n  return (\n    <div><Heading /><SearchBar /></div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}